@using System.Globalization
@using SchulCloud.Identity.Enums;
@using SchulCloud.Frontend.Enums
@using SchulCloud.Frontend.Options;

@inherits LayoutComponentBase

<MudThemeProvider @ref="_themeProvider" @bind-IsDarkMode="_isDarkMode" ObserveSystemThemeChange="@IsAutoColorTheme" />

<MudLayout>
    <MudAppBar>
        @{
            PresentationOptions.Favicon? favicon = PresentationOptionsAccessor.Value.Favicons.FirstOrDefault(fav => fav.Sizes == "any");
            favicon ??= PresentationOptionsAccessor.Value.Favicons.FirstOrDefault();

            if (favicon is not null)
            {
                <MudImage Class="mr-2" Src="@favicon.Path" Width="40" Fluid />
            }
        }
        <MudText Class="mr-10" Typo="Typo.h5">@PresentationOptionsAccessor.Value.ApplicationName</MudText>

        <MudButton Href="@Routes.Login()">
            <MudIcon Class="d-inline me-2" Icon="@MaterialSymbols.Outlined.Login" />
            @Localizer["signInLink"]
        </MudButton>
        <MudButton Href="@Routes.Privacy()">@Localizer["privacyLink"]</MudButton>

        <MudSpacer />

        @{
            (string currentIconName, string currentLocKey) = GetColorThemeInfo(_colorTheme);
        }
        <MudMenu Class="mx-3" StartIcon="@currentIconName" Label="@Localizer[currentLocKey]" EndIcon="@MaterialSymbols.Outlined.KeyboardArrowDown">
            @foreach (ColorTheme theme in Enum.GetValues<ColorTheme>())
            {
                (string iconName, string localizerKey) = GetColorThemeInfo(theme);

                <MudMenuItem OnClick="(async () => await ChangeColorTheme_ClickAsync(theme))">
                    <MudStack AlignItems="AlignItems.Center" Row>
                        <MudIcon Icon="@iconName" />
                        @Localizer[localizerKey]
                    </MudStack>
                </MudMenuItem>
            }
        </MudMenu>

        <MudMenu Label="@(_culture?.NativeName ?? Localizer["culture_Auto"])" StartIcon="@MaterialSymbols.Outlined.Translate" EndIcon="@MaterialSymbols.Outlined.KeyboardArrowDown">
            <MudMenuItem Disabled="@(_culture is null)" OnClick="@(async () => await ChangeCulture_ClickAsync(null))">
                <MudStack AlignItems="AlignItems.Center" Row>
                    <MudIcon Icon="@MaterialSymbols.Outlined.Language" />
                    @Localizer["culture_Auto"]
                </MudStack>
            </MudMenuItem>

            @foreach (CultureInfo culture in LocalizationOptions.SupportedUICultures ?? [])
            {
                <MudMenuItem Disabled="culture.Equals(_culture)" OnClick="@(async () => await ChangeCulture_ClickAsync(culture))">
                    <MudStack AlignItems="AlignItems.Center" Row>
                        <MudImage Height="30" Src="@GetFlagImgUrl(culture)" Alt="@culture.Name" />
                        @culture.NativeName
                    </MudStack>
                </MudMenuItem>
            }
        </MudMenu>
    </MudAppBar>

    <MudMainContent Class="pt-16 px-2">
        <MudContainer Class="mt-15">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>