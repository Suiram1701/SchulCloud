@using Humanizer
@using Microsoft.AspNetCore.Identity
@using SchulCloud.Web.Components.Account
@using SchulCloud.Web.Extensions

<h5 class="mt-4">@Localizer["signInMethods"]</h5>
<Accordion>
    <AccordionItem>
        <TitleTemplate>
            <SecurityMethodItemTitle IconName="password" Title="@Localizer["signIn_Password"]" />
        </TitleTemplate>
        <Content>
            @{
                string? ShowWhenTrue(bool condition, Func<IdentityError> errorProvider)
                {
                    if (condition)
                    {
                        @errorProvider().Description
                    }
                    return null;
                }
                PasswordOptions options = PasswordOptionsAccessor.Value;
            }

            <p>@Localizer["password_Desc"]</p>
            <p class="lh-base">
                @ErrorDescriber.PasswordTooShort(options.RequiredLength).Description<br />
                @ErrorDescriber.PasswordRequiresUniqueChars(options.RequiredUniqueChars).Description<br />
                @ShowWhenTrue(options.RequireNonAlphanumeric, ErrorDescriber.PasswordRequiresNonAlphanumeric)<br />
                @ShowWhenTrue(options.RequireLowercase, ErrorDescriber.PasswordRequiresLower)<br />
                @ShowWhenTrue(options.RequireUppercase, ErrorDescriber.PasswordRequiresUpper)<br />
                @ShowWhenTrue(options.RequireDigit, ErrorDescriber.PasswordRequiresDigit)
            </p>

            <Button Color="ButtonColor.Primary" Type="ButtonType.Link" To="@Routes.ChangePassword()">@Localizer["password_ChangeBtn"]</Button>
            <Button Class="ms-2" Color="ButtonColor.Danger" Type="ButtonType.Link" To="@Routes.ResetPassword(returnUrl: NavigationManager.GetRelativeUri())">@Localizer["password_ResetBtn"]</Button>
        </Content>
    </AccordionItem>
    <AccordionItem>
        <TitleTemplate>
            <SecurityMethodItemTitle IconName="passkey" Title="@Localizer["signIn_Passkeys"]" Enabled="_passkeysEnabled" />
        </TitleTemplate>
        <Content>
            <p>@Localizer["passkeys_Desc"]</p>

            <div class="d-flex">
                @if (!_passkeysEnabled)
                {
                    <Button Color="ButtonColor.Primary" @onclick="PasskeysEnable_ClickAsync">@Localizer["enableBtn"]</Button>
                }
                else
                {
                    <Button Color="ButtonColor.Danger" @onclick="PasskeysDisable_ClickAsync">@Localizer["disableBtn"]</Button>
                }

                <Button Class="d-flex align-items-center ms-2" Color="ButtonColor.Secondary" Type="ButtonType.Link" To="@Routes.SecurityKeys()">
                    <FontsIcon Name="security_key" />
                    <span class="ms-2">@Localizer["securityKey_ManageBtn"]</span>
                </Button>
            </div>
        </Content>
    </AccordionItem>
</Accordion>

<h5 class="mt-5">@Localizer["mfaMethods"]</h5>
<p class="mt-2">@Localizer["mfa_Desc"]</p>
<Accordion>
    <AccordionItem>
        <TitleTemplate>
            <SecurityMethodItemTitle IconName="qr_code_scanner" Title="@Localizer["mfa_Authenticator"]" Enabled="_mfaEnabled" LastTimeUsed="DateTime.Now.AddHours(-3)" />
        </TitleTemplate>
        <Content>
            <p>@Localizer["authenticator_Desc"]</p>

            @if (!_mfaEnabled)
            {
                <Button Color="ButtonColor.Primary" Type="ButtonType.Link" To="@Routes.Authenticator()">@Localizer["authenticator_EnableBtn"]</Button>
            }
            else
            {
                <Button Color="ButtonColor.Danger" @onclick="AuthenticatorDisable_ClickAsync">@Localizer["authenticator_DisableBtn"]</Button>
            }
        </Content>
    </AccordionItem>
    <AccordionItem>
        <TitleTemplate>
            <SecurityMethodItemTitle IconName="mail" Title="@Localizer["mfa_Email"]" Enabled="IsMfaMethodEnabled(_mfaEmailEnabled)" LastTimeUsed="DateTime.Now.AddYears(-1)" />
        </TitleTemplate>
        <Content>
            <p>@Localizer["email_Desc"]</p>

            @if (!_mfaEmailEnabled)
            {
                @if (_mfaEnabled)
                {
                    <Button Color="ButtonColor.Primary" @onclick="EmailEnable_ClickAsync">@Localizer["enableBtn"]</Button>
                }
                else
                {
                    <Tooltip Title="@Localizer["authenticator_EnableFirst"]">
                        <Button Color="ButtonColor.Primary" Disabled>@Localizer["enableBtn"]</Button>
                    </Tooltip>
                }
            }
            else
            {
                <Button Color="ButtonColor.Danger" @onclick="EmailDisable_ClickAsync">@Localizer["disableBtn"]</Button>
            }
        </Content>
    </AccordionItem>
    <AccordionItem>
        <TitleTemplate>
            <SecurityMethodItemTitle IconName="passkey" Title="@Localizer["mfa_SecurityKey"]" Enabled="IsMfaMethodEnabled(_mfaSecurityKeyEnabled)" LastTimeUsed="null" />
        </TitleTemplate>
        <Content>
            <p>@Localizer["securityKey_Sesc"]</p>

            <div class="d-flex">
                @if (!_mfaSecurityKeyEnabled)
                {
                    @if (_mfaEnabled)
                    {
                        <Button Color="ButtonColor.Primary" @onclick="SecurityKeyEnable_ClickAsync">@Localizer["enableBtn"]</Button>
                    }
                    else
                    {
                        <Tooltip Title="@Localizer["authenticator_EnableFirst"]">
                            <Button Color="ButtonColor.Primary" Disabled>@Localizer["enableBtn"]</Button>
                        </Tooltip>
                    }
                }
                else
                {
                    <Button Color="ButtonColor.Danger" @onclick="SecurityKeyDisable_ClickAsync">@Localizer["disableBtn"]</Button>
                }

                <Button Class="d-flex align-items-center ms-2" Color="ButtonColor.Secondary" Type="ButtonType.Link" To="@Routes.SecurityKeys()">
                    <FontsIcon Name="security_key" />
                    <span class="ms-2">@Localizer["securityKey_ManageBtn"]</span>
                </Button>
            </div>
        </Content>
    </AccordionItem>
    <AccordionItem>
        <TitleTemplate>
            <SecurityMethodItemTitle IconName="pin" Title="@Localizer["mfa_Recovery"]" Enabled="@(_mfaEnabled ? (_mfaRemainingRecoveryCodes > 0) : null)">
                <AdditionalBadges>
                    @if (_mfaEnabled)
                    {
                        @if (_mfaRemainingRecoveryCodes > 0)
                        {
                            <Badge Class="ms-2" Color="BadgeColor.Info">@Localizer["recovery_ValidCodes", _mfaRemainingRecoveryCodes]</Badge>
                        }
                        else
                        {
                            <Tooltip Title="@Localizer["recovery_NoValidCodes_Tooltip"]" Placement="TooltipPlacement.Right">
                                <Badge Class="ms-2" Color="BadgeColor.Warning">@Localizer["recovery_NoValidCodes"]</Badge>
                            </Tooltip>
                        }
                    }
                </AdditionalBadges>
            </SecurityMethodItemTitle>
        </TitleTemplate>
        <Content>
            <p>@Localizer["recovery_Desc"]</p>

            @{
                string btnLabelKey = _mfaRemainingRecoveryCodes == 0
                ? "recovery_GenerateNewBtn"
                : "recovery_RenewBtn";
            }
            @if (_mfaEnabled)
            {
                <Button Color="ButtonColor.Primary" Type="ButtonType.Link" To="@Routes.RecoveryCodes()">@Localizer[btnLabelKey]</Button>
            }
            else
            {
                <Tooltip Title="@Localizer["authenticator_EnableFirst"]" Placement="TooltipPlacement.Right">
                    <Button Color="ButtonColor.Primary" Disabled>@Localizer[btnLabelKey]</Button>
                </Tooltip>
            }
        </Content>
    </AccordionItem>
</Accordion>

<RemoveDialog @ref="_removeDialog" />