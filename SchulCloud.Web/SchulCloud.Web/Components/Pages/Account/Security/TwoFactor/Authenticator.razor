@using QRCoder

<SchulCloudPageTitle Title="@Localizer["title"]" />

<MudPaper Class="px-3 py-3">
    <MudText Typo="Typo.h6" Align="Align.Center">@Localizer["title"]</MudText>

    <MudGrid Class="mt-2">
        <MudItem Class="d-flex justify-center" xs="12" md="6">
            <div>
                @if (_authenticatorInfo is not null)
                {
                    @((MarkupString)_authenticatorInfo.Value.SvgRenderedQrCode)
                    <br />
                    <b class="mt-2">@_authenticatorInfo.Value.Base32Secret</b>
                }
            </div>
        </MudItem>
        <MudItem xs="12" md="6">
            <ol class="ml-5">
                <li class="mb-2">@Localizer["enableGuide_0"]</li>
                <li class="mb-2">@Localizer["enableGuide_1"]</li>
                <li>@Localizer["enableGuide_2", 6]</li>     @* Retrieve it in future from options. *@
            </ol>
        </MudItem>
        <MudItem xs="12">
            <MudForm @ref="_form" Model="_model" IsValidChanged="Form_IsValidChanged">
                <MudTextField @bind-Value="_model.Code" Label="@Localizer["form_Code"]" RequiredError="@Localizer["form_NotEmpty"]" Required
                              Validation="@((string value) => Form_ValidateCodeAsync(value))" />

                <MudButton Class="mt-3" Color="Color.Primary" OnClick="_form.Validate" >@Localizer["form_SubmitBtn"]</MudButton>
            </MudForm>
        </MudItem>
    </MudGrid>
</MudPaper>