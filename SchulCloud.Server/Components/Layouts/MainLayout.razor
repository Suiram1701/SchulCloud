@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@using SchulCloud.Database.Models
@using SchulCloud.Server.Options

@inherits LayoutComponentBase

@attribute [Authorize]

@inject IStringLocalizer<MainLayout> Localizer
@inject IOptionsSnapshot<PresentationOptions> PresentationOptions
@inject UserManager<User> UserManager
@inject RoleManager<Role> RoleManager
@inject NavigationManager NavigationManager

<div class="container-fluid h-100">
    <div class="row flex-nowrap h-100">
        <div class="col-auto d-flex flex-column flex-shrink-0 p-3 bg-body-tertiary h-100" style="min-width: 230px">
            <a class="d-flex align-items-center mb-3 mb-md-0 me-md-auto link-body-emphasis text-decoration-none" href="/">@PresentationOptions.Value.ApplicationName</a>
            <hr />

            <ul class="nav nav-pills flex-column mb-auto">
                <li>
                    <NavLink class="d-flex align-items-center nav-link" href="/" Match="NavLinkMatch.All">
                        <FontsIcon Name="dashboard" />
                        <span class="ms-2">@Localizer["menuDashboard"]</span>
                    </NavLink>
                </li>
            </ul>

            <hr />
            <Dropdown>
                <DropdownToggleButton Class="d-flex align-items-center">
                    <FontsIcon Name="account_circle" />     @* This will be later replaced with the real user image. *@
                    <strong class="ms-2">@UserManager.GetUserName(_user)</strong>
                </DropdownToggleButton>

                <DropdownMenu>
                    <DropdownItem Type="ButtonType.Link" To="/account" Active="@IsActive("/account")" Class="d-flex align-items-center">
                        <FontsIcon Name="person" />
                        <span class="ms-2">@Localizer["account"]</span>
                    </DropdownItem>

                    <DropdownItem Type="ButtonType.Link" To="/account/security" Active="@IsActive("/account/security")" Class="d-flex align-items-center">
                        <FontsIcon Name="security" />
                        <span class="ms-2">@Localizer["accountSecurity"]</span>
                    </DropdownItem>

                    <DropdownItem Type="ButtonType.Link" To="/account/settings" Active="@IsActive("/account/settings")" Class="d-flex align-items-center">
                        <FontsIcon Name="settings" />
                        <span class="ms-2">@Localizer["accountSettings"]</span>
                    </DropdownItem>

                    <DropdownDivider />
                    <DropdownItem Type="ButtonType.Link" To="/auth/signOut" Class="d-flex align-items-center">
                        <FontsIcon Name="logout" />
                        <span class="ms-2">@Localizer["accountSignOut"]</span>
                     </DropdownItem>
                </DropdownMenu>
            </Dropdown>
        </div>

        <div class="col">
            <main class="h-auto">
                @Body
            </main>
        </div>
    </div>
</div>

@code {
    private ClaimsPrincipal _user = default!;

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationState { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState state = await AuthenticationState.ConfigureAwait(false);
        _user = state.User;
    }

    private bool IsActive(string path)
    {
        Uri uri = new(NavigationManager.Uri);
        return uri.AbsolutePath.Equals(path);
    }
}