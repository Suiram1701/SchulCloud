@using System.Linq.Expressions

@typeparam TValue

@foreach (string message in EditContext.GetValidationMessages(_fieldIdentifier))
{
    <div class="invalid-feedback">
        @message
    </div>
}

@code {
    private FieldIdentifier _fieldIdentifier;

    [CascadingParameter]
    private EditContext EditContext { get; set; } = default!;

    /// <summary>
    /// An expression that specified the field for that the message is.
    /// </summary>
    [Parameter]
    public required Expression<Func<TValue>> For { get; set; }

    protected override void OnParametersSet()
    {
        if (EditContext == null)
        {
            throw new InvalidOperationException($"{nameof(EditFormValidationFeedback<TValue>)} have to be placed inside of an {nameof(EditContext)}.");
        }

        ArgumentNullException.ThrowIfNull(For, nameof(For));
        _fieldIdentifier = FieldIdentifier.Create(For);
    }
}
