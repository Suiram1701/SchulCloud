@using Humanizer
@using Microsoft.AspNetCore.Identity
@using SchulCloud.Server.Extensions

<SchulCloudPageTitle Title="@Localizer["title"]" />

<div class="d-flex flex-column mt-3">
    <h3 class="text-center">@Localizer["tabHeader"]</h3>

    <div class="mt-4 mx-3 d-flex flex-column justify-content-center">
        <Tabs Class="justify-content-center" EnableFadeEffect>
            <Tab Title="@Localizer["tabMethods"]">
                <Content>
                    <Accordion Class="mt-2" AlwaysOpen>
                        <AccordionItem>
                            <TitleTemplate>
                                <div class="d-flex justify-content-between align-items-center flex-fill">
                                    <div class="d-flex align-items-center">
                                        <FontsIcon Name="password" />
                                        <span class="ms-3">@Localizer["methodPassword"]</span>
                                    </div>

                                    @{
                                        DateTimeOffset lastSignIn = DateTimeOffset.Now.AddHours(-1);     @* This value is only a placeholder for the further implementation. *@
                                    }
                                    <span class="mx-2">@Localizer["method_LastSignIn", lastSignIn.Humanize()]</span>
                                </div>
                            </TitleTemplate>
                            <Content>
                                @{
                                    PasswordOptions options = PasswordOptionsAccessor.Value;

                                    string? ShowWhenTrue(bool condition, Func<IdentityError> errorProvider)
                                    {
                                        if (condition)
                                        {
                                            @errorProvider().Description
                                        }

                                        return null;
                                    }
                                }

                                <p>@Localizer["methodPassword_Desc"]</p>
                                <p class="lh-base">
                                    @ErrorDescriber.PasswordTooShort(options.RequiredLength).Description<br />
                                    @ErrorDescriber.PasswordRequiresUniqueChars(options.RequiredUniqueChars).Description<br />
                                    @ShowWhenTrue(options.RequireNonAlphanumeric, ErrorDescriber.PasswordRequiresNonAlphanumeric)<br />
                                    @ShowWhenTrue(options.RequireLowercase, ErrorDescriber.PasswordRequiresLower)<br />
                                    @ShowWhenTrue(options.RequireUppercase, ErrorDescriber.PasswordRequiresUpper)<br />
                                    @ShowWhenTrue(options.RequireDigit, ErrorDescriber.PasswordRequiresDigit)
                                </p>

                                <Button Color="ButtonColor.Primary" Type="ButtonType.Link" To="@Routes.ChangePassword()">@Localizer["methodPassword_Change"]</Button>
                                <Button Class="ms-2" Color="ButtonColor.Danger" Type="ButtonType.Link" To="@Routes.ResetPassword(returnUrl: NavigationManager.GetRelativeUri())">@Localizer["methodPassword_Reset"]</Button>
                            </Content>
                        </AccordionItem>
                    </Accordion>
                </Content>
            </Tab>

            <Tab Title="@Localizer["tabMfa"]">
                <Content>
                    Mfa
                </Content>
            </Tab>
        </Tabs>
    </div>
</div>